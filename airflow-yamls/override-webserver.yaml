# Flask secret key for Airflow Webserver: `[webserver] secret_key` in airflow.cfg
webserverSecretKey: 1e3519f04002400a377781ae595f86ac
webserverSecretKeySecretName: ~

kind: Deployment
apiVersion: apps/v1
metadata:
  name: airflow-webserver
  namespace: airflow-k8-local
  uid: b55171bc-c413-46ff-870b-5e8615d38182
  resourceVersion: '31737'
  generation: 7
  creationTimestamp: '2024-05-07T08:55:01Z'
  labels:
    app.kubernetes.io/managed-by: Helm
    chart: airflow-1.13.1
    component: webserver
    heritage: Helm
    release: airflow
    tier: airflow
  annotations:
    deployment.kubernetes.io/revision: '7'
    meta.helm.sh/release-name: airflow
    meta.helm.sh/release-namespace: airflow-k8-local
  managedFields:
    - manager: helm
      operation: Update
      apiVersion: apps/v1
      time: '2024-05-07T14:39:20Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:chart: {}
            f:component: {}
            f:heritage: {}
            f:release: {}
            f:tier: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum/airflow-config: {}
                f:checksum/extra-configmaps: {}
                f:checksum/extra-secrets: {}
                f:checksum/metadata-secret: {}
                f:checksum/pgbouncer-config-secret: {}
                f:checksum/webserver-config: {}
                f:checksum/webserver-secret-key: {}
              f:labels:
                .: {}
                f:component: {}
                f:release: {}
                f:tier: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"webserver"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"AIRFLOW_CONN_AIRFLOW_DB"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"AIRFLOW_HOME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"AIRFLOW__CELERY__BROKER_URL"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"AIRFLOW__CORE__FERNET_KEY"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"AIRFLOW__CORE__SQL_ALCHEMY_CONN"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"AIRFLOW__DATABASE__SQL_ALCHEMY_CONN"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"AIRFLOW__WEBSERVER__SECRET_KEY"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/opt/airflow/airflow.cfg"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                      f:subPath: {}
                    k:{"mountPath":"/opt/airflow/config/airflow_local_settings.py"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                      f:subPath: {}
                    k:{"mountPath":"/opt/airflow/logs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/opt/airflow/pod_templates/pod_template_file.yaml"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                      f:subPath: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"wait-for-airflow-migrations"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"AIRFLOW_CONN_AIRFLOW_DB"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"AIRFLOW_HOME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"AIRFLOW__CELERY__BROKER_URL"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"AIRFLOW__CORE__FERNET_KEY"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"AIRFLOW__CORE__SQL_ALCHEMY_CONN"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"AIRFLOW__DATABASE__SQL_ALCHEMY_CONN"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"AIRFLOW__WEBSERVER__SECRET_KEY"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/opt/airflow/airflow.cfg"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                      f:subPath: {}
                    k:{"mountPath":"/opt/airflow/config/airflow_local_settings.py"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                      f:subPath: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsUser: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"logs"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim: {}
    - manager: dashboard
      operation: Update
      apiVersion: apps/v1
      time: '2024-05-07T14:42:27Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:volumes:
                k:{"name":"logs"}:
                  f:persistentVolumeClaim:
                    f:claimName: {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2024-05-07T14:52:29Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:unavailableReplicas: {}
          f:updatedReplicas: {}
      subresource: status
spec:
  replicas: 1
  selector:
    matchLabels:
      component: webserver
      release: airflow
      tier: airflow
  template:
    metadata:
      creationTimestamp: null
      labels:
        component: webserver
        release: airflow
        tier: airflow
      annotations:
        checksum/airflow-config: 406173e5be952c6c82d463e3c2c65871106f2fc75489140e60788943e4312703
        checksum/extra-configmaps: e862ea47e13e634cf17d476323784fa27dac20015550c230953b526182f5cac8
        checksum/extra-secrets: e9582fdd622296c976cbc10a5ba7d6702c28a24fe80795ea5b84ba443a56c827
        checksum/metadata-secret: 319cd88a8ab7b207fcc25eb28e9e337b3f59d340e8888649aca6a54f206a4d09
        checksum/pgbouncer-config-secret: 1dae2adc757473469686d37449d076b0c82404f61413b58ae68b3c5e99527688
        checksum/webserver-config: 2f3fdfd294a37094d2abee43b2b09888a5c195ee03414996bf99a4681658af94
        checksum/webserver-secret-key: dc527ec1f7b380f724b4a9cbdc615120525b13aa32736e626b6cc03b7b1aa242
    spec:
      volumes:
        - name: config
          configMap:
            name: airflow-config
            defaultMode: 420
        - name: logs
          persistentVolumeClaim:
            # claimName: logs-airflow-worker-0
            claimName: airflow-logs-pvc-2
      initContainers:
        - name: wait-for-airflow-migrations
          image: apache/airflow:2.8.3
          args:
            - airflow
            - db
            - check-migrations
            - '--migration-wait-timeout=60'
          env:
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  name: airflow-fernet-key
                  key: fernet-key
            - name: AIRFLOW_HOME
              value: /opt/airflow
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: airflow-metadata
                  key: connection
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: airflow-metadata
                  key: connection
            - name: AIRFLOW_CONN_AIRFLOW_DB
              valueFrom:
                secretKeyRef:
                  name: airflow-metadata
                  key: connection
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: airflow-webserver-secret-key
                  key: webserver-secret-key
                  # key: 1e3519f04002400a377781ae595f86ac
            - name: AIRFLOW__CELERY__BROKER_URL
              valueFrom:
                secretKeyRef:
                  name: airflow-broker-url
                  key: connection
          resources: {}
          volumeMounts:
            - name: config
              readOnly: true
              mountPath: /opt/airflow/airflow.cfg
              subPath: airflow.cfg
            - name: config
              readOnly: true
              mountPath: /opt/airflow/config/airflow_local_settings.py
              subPath: airflow_local_settings.py
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
      containers:
        - name: webserver
          image: apache/airflow:2.8.3
          args:
            - bash
            - '-c'
            - exec airflow webserver
          ports:
            - name: airflow-ui
              containerPort: 8080
              protocol: TCP
          env:
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  name: airflow-fernet-key
                  key: fernet-key
            - name: AIRFLOW_HOME
              value: /opt/airflow
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: airflow-metadata
                  key: connection
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: airflow-metadata
                  key: connection
            - name: AIRFLOW_CONN_AIRFLOW_DB
              valueFrom:
                secretKeyRef:
                  name: airflow-metadata
                  key: connection
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: airflow-webserver-secret-key
                  key: webserver-secret-key
            - name: AIRFLOW__CELERY__BROKER_URL
              valueFrom:
                secretKeyRef:
                  name: airflow-broker-url
                  key: connection
          resources: {}
          volumeMounts:
            - name: config
              readOnly: true
              mountPath: /opt/airflow/pod_templates/pod_template_file.yaml
              subPath: pod_template_file.yaml
            - name: config
              readOnly: true
              mountPath: /opt/airflow/airflow.cfg
              subPath: airflow.cfg
            - name: config
              readOnly: true
              mountPath: /opt/airflow/config/airflow_local_settings.py
              subPath: airflow_local_settings.py
            - name: logs
              mountPath: /opt/airflow/logs
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          startupProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            timeoutSeconds: 20
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: airflow-webserver
      serviceAccount: airflow-webserver
      securityContext:
        runAsUser: 50000
        fsGroup: 0
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    component: webserver
                topologyKey: kubernetes.io/hostname
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 7
  replicas: 2
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  unavailableReplicas: 1
  conditions:
    - type: Available
      status: 'True'
      lastUpdateTime: '2024-05-07T14:52:29Z'
      lastTransitionTime: '2024-05-07T14:52:29Z'
      reason: MinimumReplicasAvailable
      message: Deployment has minimum availability.
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2024-05-07T14:52:29Z'
      lastTransitionTime: '2024-05-07T14:35:57Z'
      reason: ReplicaSetUpdated
      message: ReplicaSet "airflow-webserver-5855f8f67" is progressing.
